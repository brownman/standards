// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var $, App, AppLayout, Backbone, Check, CheckView, Marionette, NavBarView, Task, TaskView, Tasks, TasksView, User, WeekDayHeader, initialize, _;
    $ = require('jquery');
    _ = require('underscore');
    Backbone = require('backbone');
    Marionette = require('marionette');
    User = (function(_super) {

      __extends(User, _super);

      function User() {
        return User.__super__.constructor.apply(this, arguments);
      }

      User.prototype.url = '/api/user/info';

      User.prototype.isSignedIn = function() {
        return !this.isNew();
      };

      User.prototype.signIn = function(email, password, onFail, onSucceed) {
        $.ajax({
          url: '/sign-in',
          method: 'POST',
          dataType: 'json',
          data: {
            email: email,
            password: password
          },
          error: onFail,
          success: onSucceed,
          context: this
        });
        return this;
      };

      User.prototype.signOut = function() {
        return $.ajax({
          url: '/sign-out',
          method: 'POST'
        }).done(function() {
          this.clear();
          return this.trigger('signed-out');
        });
      };

      return User;

    })(Backbone.Model);
    Task = (function(_super) {

      __extends(Task, _super);

      function Task() {
        return Task.__super__.constructor.apply(this, arguments);
      }

      Task.prototype.url = "/task";

      return Task;

    })(Backbone.Model);
    Check = (function(_super) {

      __extends(Check, _super);

      function Check() {
        return Check.__super__.constructor.apply(this, arguments);
      }

      Check.prototype.url = "/check";

      return Check;

    })(Backbone.Model);
    Tasks = (function(_super) {

      __extends(Tasks, _super);

      function Tasks() {
        return Tasks.__super__.constructor.apply(this, arguments);
      }

      Tasks.prototype.model = Task;

      Tasks.prototype.url = '/api/tasks';

      return Tasks;

    })(Backbone.Collection);
    AppLayout = (function(_super) {

      __extends(AppLayout, _super);

      function AppLayout() {
        return AppLayout.__super__.constructor.apply(this, arguments);
      }

      AppLayout.prototype.template = '#app-layout';

      AppLayout.prototype.regions = {
        navigation: ".navigation",
        body: ".body"
      };

      return AppLayout;

    })(Backbone.Marionette.Layout);
    WeekDayHeader = (function(_super) {

      __extends(WeekDayHeader, _super);

      function WeekDayHeader() {
        return WeekDayHeader.__super__.constructor.apply(this, arguments);
      }

      WeekDayHeader.prototype.template = '#weekday-header-template';

      return WeekDayHeader;

    })(Backbone.View);
    TaskView = (function(_super) {

      __extends(TaskView, _super);

      function TaskView() {
        return TaskView.__super__.constructor.apply(this, arguments);
      }

      TaskView.prototype.tagName = 'tr';

      TaskView.prototype.template = '#task-template';

      return TaskView;

    })(Backbone.Marionette.ItemView);
    TasksView = (function(_super) {

      __extends(TasksView, _super);

      function TasksView() {
        return TasksView.__super__.constructor.apply(this, arguments);
      }

      TasksView.prototype.tagName = 'table';

      TasksView.prototype.id = 'tasksView';

      TasksView.prototype.itemView = TaskView;

      TasksView.prototype.appendHtml = function(collectionView, itemView) {
        return collectionView.$("tbody").append(itemView.el);
      };

      return TasksView;

    })(Backbone.Marionette.CollectionView);
    CheckView = (function(_super) {

      __extends(CheckView, _super);

      function CheckView() {
        return CheckView.__super__.constructor.apply(this, arguments);
      }

      CheckView.prototype.tagname = 'a';

      CheckView.prototype.initialize = function() {
        return this.template = _.template($('#check-template').html());
      };

      CheckView.prototype.render = function() {
        var renderedContent;
        renderedContent = this.template(this.model.toJSON());
        $(this.el).html(renderedContent);
        return this;
      };

      return CheckView;

    })(Backbone.Marionette.ItemView);
    NavBarView = (function(_super) {

      __extends(NavBarView, _super);

      function NavBarView() {
        return NavBarView.__super__.constructor.apply(this, arguments);
      }

      NavBarView.prototype.template = '#navbar-template';

      return NavBarView;

    })(Backbone.Marionette.Layout);
    App = (function(_super) {

      __extends(App, _super);

      function App() {
        return App.__super__.constructor.apply(this, arguments);
      }

      App.prototype.initialize = function() {
        this.title = 'Standards';
        this.user = new User;
        this.user.fetch();
        this.tasks = new Tasks;
        this.tasks.fetch();
        this.main.show(this.layout = new AppLayout);
        this.layout.navigation.show(this.navigation = new NavBarView({
          model: this.user
        }));
        return this.layout.body.show(this.tasksView = new TasksView({
          collection: this.tasks
        }));
      };

      return App;

    })(Backbone.Marionette.Application);
    initialize = function() {
      _.templateSettings = {
        evaluate: /\{\[([\s\S]+?)\]\}/g,
        interpolate: /\{\{([\s\S]+?)\}\}/g
      };
      window.app = new App;
      window.app.addRegions({
        main: 'body'
      });
      return window.app.initialize();
    };
    return {
      initialize: initialize
    };
  });

}).call(this);
